// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  password      String?
  email         String          @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  phone String?
  country Country?
  address String?
  is_online  Boolean @default(true)
  last_ping  DateTime @default(now())
 
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  createdJob Job[] @relation(name: "JobClient")
  workedJob Job[] @relation(name: "JobDeveloper")
  JobApplication JobApplication[]
  UserExperience UserExperience[]
  UserEducation UserEducation[]
  Messages Message[]
  UserChannels UserChannel[]
}

model Job {
  id String @id @default(cuid())
  title String
  shortDescription String @map("short_description")
  longDescription String @map("long_description")
  workMode WorkMode @map("work_mode")
  country Country
  amount Int?
  clientId String @map("client_id")
  client User @relation(fields: [clientId], references: [id], name: "JobClient")
  isAccepted Boolean @default(false) @map("is_accepted")
  developerId String? @map("developer_id")
  developer User? @relation(fields: [developerId], references: [id], name: "JobDeveloper")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  acceptedAt DateTime? @map("accepted_at")
  completedAt DateTime? @map("completed_at")

  JobApplication JobApplication[]
}

model JobApplication {
  id String @id @default(cuid())
  jobId String @map("job_id")
  job Job @relation(fields: [jobId], references: [id])
  developerId String @map("developer_id")
  developer User @relation(fields: [developerId], references: [id])
  isAccepted Boolean @default(false) @map("is_accepted")
  isRejected Boolean @default(false) @map("is_rejected")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model UserExperience {
  id String @id @default(cuid())
  userId String @map("user_id")
  user User @relation(fields: [userId], references: [id])
  companyName String
  position String
  description String
  startDate DateTime
  endDate DateTime?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model UserEducation {
  id String @id @default(cuid())
  userId String @map("user_id")
  user User @relation(fields: [userId], references: [id])
  institutionName String
  fieldOfStudy String
  startDate DateTime
  endDate DateTime?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model SocketIoAttachments {
  id BigInt @default(autoincrement()) @id
  payload Bytes
  createdAt DateTime @default(now()) @map("created_at")
  @@map("socket-io-attachments")
}

model Channel {
  id String @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")

  Messages Message[]
  UserChannels UserChannel[]
}

model Message {
  id String @id @default(cuid())
  fromUserId String @map("from_user_id")
  fromUser User @relation(fields: [fromUserId], references: [id])
  channelId String @map("channel_id")
  channel Channel @relation(fields: [channelId], references: [id])
  content String

  createdAt DateTime @default(now()) @map("created_at")

  UserChannel UserChannel[]
}

model UserChannel {
  userId String @map("user_id")
  user User @relation(fields: [userId], references: [id])
  channelId String @map("channel_id")
  channel Channel @relation(fields: [channelId], references: [id])
  clientOffsetId String? @map("client_offset_id")
  clientOffset Message? @relation(fields: [clientOffsetId], references: [id])

  @@id([userId, channelId])
}

enum WorkMode {
  REMOTE
  HYBRID
  OFFICE
}

enum Role {
  USER
  ADMIN
}

enum Country {
  AFGHANISTAN
  ALBANIA
  ALGERIA
  ANDORRA
  ANGOLA
  ANTIGUA_AND_BARBUDA
  ARGENTINA
  ARMENIA
  AUSTRALIA
  AUSTRIA
  AZERBAIJAN
  BAHAMAS
  BAHRAIN
  BANGLADESH
  BARBADOS
  BELARUS
  BELGIUM
  BELIZE
  BENIN
  BHUTAN
  BOLIVIA
  BOSNIA_AND_HERZEGOVINA
  BOTSWANA
  BRAZIL
  BRUNEI
  BULGARIA
  BURKINA_FASO
  BURUNDI
  CABO_VERDE
  CAMBODIA
  CAMEROON
  CANADA
  CENTRAL_AFRICAN_REPUBLIC
  CHAD
  CHILE
  CHINA
  COLOMBIA
  COMOROS
  CONGO_BRAZZAVILLE
  CONGO_KINSHASA
  COSTA_RICA
  COTE_DIVOIRE
  CROATIA
  CUBA
  CYPRUS
  CZECH_REPUBLIC
  DENMARK
  DJIBOUTI
  DOMINICA
  DOMINICAN_REPUBLIC
  EAST_TIMOR
  ECUADOR
  EGYPT
  EL_SALVADOR
  EQUATORIAL_GUINEA
  ERITREA
  ESTONIA
  ESWATINI
  ETHIOPIA
  FIJI
  FINLAND
  FRANCE
  GABON
  GAMBIA
  GEORGIA
  GERMANY
  GHANA
  GREECE
  GRENADA
  GUATEMALA
  GUINEA
  GUINEA_BISSAU
  GUYANA
  HAITI
  HONDURAS
  HUNGARY
  ICELAND
  INDIA
  INDONESIA
  IRAN
  IRAQ
  IRELAND
  ISRAEL
  ITALY
  JAMAICA
  JAPAN
  JORDAN
  KAZAKHSTAN
  KENYA
  KIRIBATI
  KOREA_NORTH
  KOREA_SOUTH
  KOSOVO
  KUWAIT
  KYRGYZSTAN
  LAOS
  LATVIA
  LEBANON
  LESOTHO
  LIBERIA
  LIBYA
  LIECHTENSTEIN
  LITHUANIA
  LUXEMBOURG
  MADAGASCAR
  MALAWI
  MALAYSIA
  MALDIVES
  MALI
  MALTA
  MARSHALL_ISLANDS
  MAURITANIA
  MAURITIUS
  MEXICO
  MICRONESIA
  MOLDOVA
  MONACO
  MONGOLIA
  MONTENEGRO
  MOROCCO
  MOZAMBIQUE
  MYANMAR
  NAMIBIA
  NAURU
  NEPAL
  NETHERLANDS
  NEW_ZEALAND
  NICARAGUA
  NIGER
  NIGERIA
  NORTH_MACEDONIA
  NORWAY
  OMAN
  PAKISTAN
  PALAU
  PALESTINE
  PANAMA
  PAPUA_NEW_GUINEA
  PARAGUAY
  PERU
  PHILIPPINES
  POLAND
  PORTUGAL
  QATAR
  ROMANIA
  RUSSIA
  RWANDA
  SAINT_KITTS_AND_NEVIS
  SAINT_LUCIA
  SAINT_VINCENT_AND_THE_GRENADINES
  SAMOA
  SAN_MARINO
  SAO_TOME_AND_PRINCIPE
  SAUDI_ARABIA
  SENEGAL
  SERBIA
  SEYCHELLES
  SIERRA_LEONE
  SINGAPORE
  SLOVAKIA
  SLOVENIA
  SOLOMON_ISLANDS
  SOMALIA
  SOUTH_AFRICA
  SOUTH_SUDAN
  SPAIN
  SRI_LANKA
  SUDAN
  SURINAME
  SWEDEN
  SWITZERLAND
  SYRIA
  TAIWAN
  TAJIKISTAN
  TANZANIA
  THAILAND
  TOGO
  TONGA
  TRINIDAD_AND_TOBAGO
  TUNISIA
  TURKEY
  TURKMENISTAN
  TUVALU
  UGANDA
  UKRAINE
  UNITED_ARAB_EMIRATES
  UNITED_KINGDOM
  UNITED_STATES
  URUGUAY
  UZBEKISTAN
  VANUATU
  VATICAN_CITY
  VENEZUELA
  VIETNAM
  YEMEN
  ZAMBIA
  ZIMBABWE
}
